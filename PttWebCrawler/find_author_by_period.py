# -*- coding: utf-8 -*-
import json
import pprint
import re
import time, datetime

#TODO: combine files into one file in file_list
file_list = [   "PttLifeLaw-1-16.json", "PttLifeLaw-17-311.json", "PttLifeLaw-312-457.json", \
                "PttLifeLaw-458-514.json", "PttLifeLaw-515-805.json", "PttLifeLaw-806-1321.json"]

date_start = "Tue Oct 15 02:54:43 2018"
date_end = "Thu Nov 30 15:10:08 2018"
date_start_in_num = time.mktime(time.strptime(date_start))
date_end_in_num = time.mktime(time.strptime(date_end))

if date_start_in_num > date_end_in_num:
    print "periods error !!!"
    print "please check date_start, and date_end"
    exit(-1)

file_name = "./fixed_data/PttLifeLaw-806-1321.json"
with open(file_name) as f:
    data = json.load(f)

id_list_in_period = set()
for an_article in data["articles"]:
    if an_article.has_key("error") or an_article["author"] == None or an_article["date"] == "":
        continue
    else:
        article_date = time.mktime(time.strptime(an_article["date"].encode('utf-8')))
    try:
        if an_article["article_title"] != None and re.search(u"[公告]", an_article["article_title"]):
            '''
            search title for remove article with "[公告"].
            However, some article_title is None. Don't know why.
            '''
            continue
    except TypeError:
        print an_article["article_title"], "@ ", an_article["article_id"] 
        break
    try:
        author = an_article["author"].encode('utf-8')
        author_id = author.split(" ")[0]
        date = an_article["date"].encode('utf-8')
        article_title = an_article["article_title"]
    except KeyError:
        print an_article
        break
    if (article_date > date_start_in_num) and (article_date < date_end_in_num):
        print author, "@", date, ": ", article_title
        id_list_in_period.add(author_id)

id_for_has_sent = set( ["newhand0815", "cutecathy520", "haleyye", "orange90897", "alione", 
                    "Kaili", "ting31823", "catePP", "widlar", "bp6ru4"])
id_list_in_period = id_list_in_period - id_for_has_sent
print id_list_in_period
print len(id_list_in_period)

# gen namelist script for ptt
'''
1. login into ptt by your ID
2. enter (N)amelist
3. enter (S)pecial
4. select namelist id (0~9)
5. paste string generated by following procedure
'''
namelist_desc = "elsa_%s"%datetime.datetime.now().strftime("%Y-%m-%d_%H%M")
for an_id in id_list_in_period:
    print "a"
    print an_id
    print namelist_desc
